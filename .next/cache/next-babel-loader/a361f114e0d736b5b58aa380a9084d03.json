{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/yanweilin/Desktop/clone next/Fsn365-2020/src/conponents/Assetstable/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.less';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nvar columns = [{\n  id: 'name',\n  label: 'Assets',\n  minWidth: 170,\n  align: 'center'\n}, {\n  id: 'id',\n  label: 'AssetsID',\n  align: 'center',\n  minWidth: 100\n}, {\n  id: 'quantity',\n  label: 'Quantity',\n  minWidth: 170,\n  align: 'center',\n  format: function format(value) {\n    return value.toFixed(2);\n  }\n}];\n\nfunction createData(name, code, population) {\n  return {\n    name: name,\n    code: code,\n    population: population\n  };\n}\n\nvar rows = [createData('India', 'IN', 1324171354), createData('China', 'CN', 1403500365), createData('Italy', 'IT', 60483973), createData('United States', 'US', 327167434), createData('Canada', 'CA', 37602103), createData('Australia', 'AU', 25475400), createData('Germany', 'DE', 83019200), createData('Ireland', 'IE', 4857000), createData('Mexico', 'MX', 126577691), createData('Japan', 'JP', 126317000), createData('France', 'FR', 67022000), createData('United Kingdom', 'GB', 67545757), createData('Russia', 'RU', 146793744), createData('Nigeria', 'NG', 200962417), createData('Brazil', 'BR', 210147125)];\nvar useStyles = makeStyles({\n  root: {\n    width: '86%',\n    margin: '40px auto'\n  },\n  container: {\n    maxHeight: 840\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n\n  var _this = this;\n\n  // ...........\n  var _useState = useState([]),\n      rows = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios(\"https://api.fsn365.com/assets\");\n\n              case 2:\n                result = _context.sent;\n                console.log(result.data, '1');\n                setData(result.data.data.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  console.log(rows);\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(\"div\", {\n    className: \"assetsbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Assets\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 40\n      }\n    }, column.label));\n  }))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 49\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 53\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value));\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(StickyHeadTable, \"LWsDnos+L+vbCRGaSnhH6gc3Y1M=\", false, function () {\n  return [useStyles];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/Users/yanweilin/Desktop/clone next/Fsn365-2020/src/conponents/Assetstable/index.jsx"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toFixed","createData","name","code","population","rows","useStyles","root","width","margin","container","maxHeight","StickyHeadTable","setData","fetchData","result","console","log","data","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","index","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.less'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [\n\n    {\n        id: 'name',\n        label: 'Assets',\n        minWidth: 170,\n        align: 'center',\n    },\n    {\n        id: 'id',\n        label: 'AssetsID',\n        align: 'center',\n        minWidth: 100\n    },\n    {\n        id: 'quantity',\n        label: 'Quantity',\n        minWidth: 170,\n        align: 'center',\n        format: (value) => value.toFixed(2),\n    }\n];\n\nfunction createData(name, code, population) {\n    return { name, code, population };\n}\n\nconst rows = [\n    createData('India', 'IN', 1324171354),\n    createData('China', 'CN', 1403500365),\n    createData('Italy', 'IT', 60483973),\n    createData('United States', 'US', 327167434),\n    createData('Canada', 'CA', 37602103),\n    createData('Australia', 'AU', 25475400),\n    createData('Germany', 'DE', 83019200),\n    createData('Ireland', 'IE', 4857000),\n    createData('Mexico', 'MX', 126577691),\n    createData('Japan', 'JP', 126317000),\n    createData('France', 'FR', 67022000),\n    createData('United Kingdom', 'GB', 67545757),\n    createData('Russia', 'RU', 146793744),\n    createData('Nigeria', 'NG', 200962417),\n    createData('Brazil', 'BR', 210147125),\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: '86%',\n        margin:'40px auto'\n    },\n    container: {\n        maxHeight: 840,\n    },\n});\n\nexport default function StickyHeadTable() {\n    // ...........\n    const [rows, setData] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios(\n                `https://api.fsn365.com/assets`,\n            );\n            console.log(result.data, '1')\n            setData(result.data.data.data);\n        };\n        fetchData();\n    }, []);\n    console.log(rows)\n\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n      };\n    return (\n        <div className='assetsbox'>\n            <div className='h5'>Assets</div>\n        <Paper className='root'>\n                <TableContainer>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                       <strong>{column.label}</strong>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    <a href=\"#\">{column.format && typeof value === 'number' ? column.format(value) : value}</a>\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n            </Paper>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}