{"ast":null,"code":"var _jsxFileName = \"D:\\\\web-JXZQ\\\\Program\\\\fsn\\\\Fsn365-2020\\\\pages\\\\address\\\\table.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // import ''\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'address',\n  label: 'Address',\n  minWidth: 170\n}, {\n  id: 'balance',\n  label: 'FSN Balance',\n  minWidth: 170\n}, {\n  id: 'tl',\n  label: 'TL FSN',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'ownership',\n  label: 'FSN Ownership',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(address, balance, tl, ownership) {\n  return {\n    address,\n    balance,\n    tl,\n    ownership\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const {\n    0: rows,\n    1: setData\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`https://api.fsn365.com/address`);\n      var aa = [];\n      result.data.data.data.map(item => {\n        // console.log(item.fsn * e * -6);\n        aa.push(createData(item.id, item.fsn, item.fsnIn, item.fsnOwn));\n      });\n      console.log(aa); // console.log(result.data.data.data);\n\n      setData(aa);\n    };\n\n    fetchData();\n  }, []);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(Paper, {\n    className: \"addressroot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(TableContainer, {\n    className: \"addresscontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/web-JXZQ/Program/fsn/Fsn365-2020/pages/address/table.jsx"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","address","balance","tl","ownership","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","rows","setData","fetchData","result","aa","data","map","item","push","fsn","fsnIn","fsnOwn","console","log","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import ''\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'address', label: 'Address', minWidth: 170 },\n  { id: 'balance', label: 'FSN Balance', minWidth: 170 },\n  {\n    id: 'tl',\n    label: 'TL FSN',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'ownership',\n    label: 'FSN Ownership',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n];\n\nfunction createData(address, balance, tl, ownership) {\n  return { address, balance, tl, ownership };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [rows, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`https://api.fsn365.com/address`);\n\n      var aa = [];\n      result.data.data.data.map((item) => {\n        // console.log(item.fsn * e * -6);\n        aa.push(createData(item.id, item.fsn, item.fsnIn, item.fsnOwn));\n      });\n      console.log(aa);\n      // console.log(result.data.data.data);\n      setData(aa);\n    };\n    fetchData();\n  }, []);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className=\"addressroot\">\n      <TableContainer className=\"addresscontainer\">\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}